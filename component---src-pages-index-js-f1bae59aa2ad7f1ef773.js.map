{"version":3,"sources":["webpack://gatsby-serif-theme/./src/components/Call.js","webpack://gatsby-serif-theme/./src/pages/index.js"],"names":["props","data","useStaticQuery","className","showButton","href","contactJson","contact_button_link","intro","site","siteMetadata","services","edges","features","introImageClasses","frontmatter","intro_image_absolute","intro_image_hide_on_mobile","bodyClass","title","data-sal","data-sal-duration","data-sal-easing","dangerouslySetInnerHTML","__html","html","intro_image","alt","src","length","map","node","key","id","data-sal-delay","excerpt","image","description"],"mappings":"qJAsBA,IAnBaA,IACX,MAAMC,GAAOC,QAAe,cAO5B,OACE,uBAAKC,UAAU,QACZH,EAAMI,YACL,uBAAKD,UAAU,mBACb,qBAAGE,KAAMJ,EAAKK,YAAYC,oBAAqBJ,UAAU,UAAzD,2B,iHCuHV,UA/HaH,IACX,MAAMQ,EAAQR,EAAMC,KAAKO,MACnBC,EAAOT,EAAMC,KAAKQ,KAAKC,aACvBC,EAAWX,EAAMC,KAAKU,SAASC,MAC/BC,EAAWb,EAAMC,KAAKY,SAASD,MAC/BE,EAAiB,sBAAkBN,EAAMO,YAAYC,sBAAwB,uBAA5D,YAAsFR,EAAMO,YAAYE,4BAA8B,2BAE7J,OACE,gBAAC,IAAD,CAAQC,UAAU,aAChB,gBAAC,IAAD,CAAKC,MAAOV,EAAKU,QACjB,gBAAC,IAAD,MAEA,uBAAKC,WAAS,WAAWC,oBAAkB,MAAMC,kBAAgB,UAAUnB,UAAU,SACnF,uBAAKA,UAAU,aACb,uBAAKA,UAAU,6BACb,uBAAKA,UAAU,+CACb,uBAAKoB,wBAAyB,CAAEC,OAAQhB,EAAMiB,QAC9C,gBAAC,IAAD,CAAMrB,YAAU,KAEjBI,EAAMO,YAAYW,aACjB,uBAAKvB,UAAU,iEACb,uBAAKwB,IAAKnB,EAAMO,YAAYI,MAAOhB,UAAWW,EAAmBc,IAAKpB,EAAMO,YAAYW,kBAOjGf,EAASkB,OAAS,GACjB,uBAAK1B,UAAU,SACb,uBAAKA,UAAU,gCACb,uBAAKA,UAAU,6BACZQ,EAASmB,KAAI,QAAC,KAAEC,GAAH,SACZ,uBAAKC,IAAKD,EAAKE,GAAI9B,UAAU,wBAC3B,uBAAKiB,WAAS,WAAWC,oBAAkB,MAAMa,iBAAe,MAAMZ,kBAAgB,UAAUnB,UAAU,2BACxG,uBAAKA,UAAU,mBACb,sBAAIA,UAAU,iBAAiB4B,EAAKhB,YAAYI,OAEhD,yBAAIY,EAAKI,gBAMnB,uBAAKhC,UAAU,iCAOpBU,EAASgB,OAAS,GACjB,uBAAK1B,UAAU,oBACb,uBAAKA,UAAU,yCACb,uBAAKA,UAAU,8BACZU,EAASiB,KAAI,QAAC,KAAEC,GAAH,SACZ,uBAAKC,IAAKD,EAAKE,GAAI9B,UAAU,iCAC3B,uBAAKiB,WAAS,WAAWC,oBAAkB,MAAMlB,UAAU,UAAUmB,kBAAgB,YAClFS,EAAKK,OACJ,uBAAKjC,UAAU,iBACb,uBAAKyB,IAAKG,EAAKK,SAGnB,sBAAIjC,UAAU,iBAAiB4B,EAAKZ,OACpC,uBAAKhB,UAAU,mBAAmB4B,EAAKM","file":"component---src-pages-index-js-f1bae59aa2ad7f1ef773.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Call = props => {\n  const data = useStaticQuery(graphql`\n    query ContactQuery {\n        contactJson {\n          contact_button_link\n        }\n    }\n   `);\n  return (\n    <div className=\"call\">\n      {props.showButton && (\n        <div className=\"call-box-bottom\">\n          <a href={data.contactJson.contact_button_link} className=\"button\">Reserve Your Invite</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Call;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport Call from '../components/Call';\n\nconst Home = props => {\n  const intro = props.data.intro;\n  const site = props.data.site.siteMetadata;\n  const services = props.data.services.edges;\n  const features = props.data.features.edges;\n  const introImageClasses = `intro-image ${intro.frontmatter.intro_image_absolute && 'intro-image-absolute'} ${intro.frontmatter.intro_image_hide_on_mobile && 'intro-image-hide-mobile'}`;\n\n  return (\n    <Layout bodyClass=\"page-home\">\n      <SEO title={site.title} />\n      <Helmet />\n\n      <div data-sal=\"slide-up\" data-sal-duration=\"300\" data-sal-easing=\"ease-in\" className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-12 col-md-7 col-lg-6 order-2 order-md-1\">\n              <div dangerouslySetInnerHTML={{ __html: intro.html }} />\n              <Call showButton />\n            </div>\n            {intro.frontmatter.intro_image && (\n              <div className=\"col-12 col-md-5 col-lg-6 order-1 order-md-2 position-relative\">\n                <img alt={intro.frontmatter.title} className={introImageClasses} src={intro.frontmatter.intro_image} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {services.length > 0 && (\n        <div className=\"strip\">\n          <div className=\"container pt-6 pb-6 pb-md-10\">\n            <div className=\"row justify-content-start\">\n              {services.map(({ node }) => (\n                <div key={node.id} className=\"col-12 col-md-4 mb-1\">\n                  <div data-sal=\"slide-up\" data-sal-duration=\"300\" data-sal-delay=\"300\" data-sal-easing=\"ease-in\" className=\"service service-summary\">\n                    <div className=\"service-content\">\n                      <h2 className=\"service-title\">{node.frontmatter.title}\n                      </h2>\n                      <p>{node.excerpt}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"row justify-content-center\">\n\n            </div>\n          </div>\n        </div>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"strip strip-grey\">\n          <div className=\"container pt-6 pb-6 pt-md-10 pb-md-10\">\n            <div className=\"row justify-content-center\">\n              {features.map(({ node }) => (\n                <div key={node.id} className=\"col-12 col-md-6 col-lg-4 mb-2\">\n                  <div data-sal=\"slide-up\" data-sal-duration=\"500\" className=\"feature\" data-sal-easing=\"ease-out\">\n                    {node.image && (\n                      <div className=\"feature-image\">\n                        <img src={node.image} />\n                      </div>\n                    )}\n                    <h2 className=\"feature-title\">{node.title}</h2>\n                    <div className=\"feature-content\">{node.description}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    services: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/services\\/.*/\" } }\n      sort: { fields: [frontmatter___weight], order: ASC }\n      limit: 6\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n    intro: markdownRemark(\n      fileAbsolutePath: {regex: \"/content/index.md/\"}\n    ) {\n        html\n        frontmatter {\n          image\n          intro_image\n          intro_image_absolute\n          intro_image_hide_on_mobile\n          title\n        }\n    }\n    features: allFeaturesJson {\n      edges {\n        node {\n          id\n          title\n          description\n          image\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Home;\n"],"sourceRoot":""}